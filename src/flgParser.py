#!/usr/bin/python
########################################################################
# This file was automatically generated by fpg version 1.0.0-alpha1
########################################################################

import sys

try:
  ParserException
except NameError,e:
  class ParserException(Exception): pass
try:
  ParserFatalException
except NameError,e:
  class ParserFatalException(ParserException): pass
try:
  ParserWarningException
except NameError,e:
  class ParserWarningException(ParserException): pass
try:
  ActionFailedException
except NameError,e:
  class ActionFailedException(ParserFatalException): pass
try:
  FPGExpressionTuple
except NameError,e:
  class FPGExpressionTuple(tuple):
    def __repr__(self):
      return 'FPGXP' + super(FPGExpressionTuple,self).__repr__()
  FPGXP = FPGExpressionTuple

class flgParser(object):

  def __init__(self):
    pass

  def debug(self, rulenum, states, values, lookahead, action):
    pass

  def initializeParser(self):
    pass

  def finalizeParser(self, value):
    return value

  def parse(self, lexer):
    self.lexer = lexer
    states = [ self.tables[u'actions'][None] ]
    values = []
    seen = []
    lookahead = None
    self.initializeParser()
    while len(states) == 1 or states[-1] > 0:
      if lookahead is None:
        lookahead = lexer.next()
      #print >> sys.stderr, "* parser states %s values %s lookahead %s" % (repr(states), repr(values), repr(lookahead))
      a = self.tables[u'actions'].get( (states[-1],-lookahead.token), None )
      if a is None or (len(values) > 0 and values[-1] is None):
        self._error_recovery(states, values, seen, lookahead)
      elif a < 0:
        rule = self.tables[u'rules'][-a]
        self.debug(-a, states, values, lookahead, rule[2])
        rulevars = values[-len(rule[1]):]
        states[-len(rule[1]):] = []
        values[-len(rule[1]):] = []
        # special stuff to allow the action processor to change the input source:
        # tell the lexer to save the lookahead
        self.lexer.push(lookahead)
        lookahead = None
        try:
          val = self._eval_action(rule[2], rulevars)
        except ActionFailedException,e:
          print >> sys.stderr, "Production action raised error: " + str(e)
          val = None
        states.append(self.tables[u'actions'][(states[-1],rule[0])])
        values.append(val)
      else:
        seen = seen[-9:] + [lookahead]
        states.append(a)
        values.append(lookahead.value)
        lookahead = None
    return self.finalizeParser(values[0])

  def _eval_action(self, action, rulevars):
    if not isinstance(action,tuple):
      if action is None:
        action_evaluation = rulevars[0]
      elif isinstance(action, list):
        action_evaluation = [self._eval_action(listitem,rulevars) for listitem in action]
      elif isinstance(action, (int,str,unicode)):
        action_evaluation = action
      else:
        raise ActionFailedException( "Unknown action type " + repr(action) )
    elif action[0] == u'$':
      action_evaluation = rulevars[int(action[1])-1]
    elif action[0] == u'(':
      meth = getattr(self,action[1],None)
      if meth is None:
        raise ActionFailedException( "Unknown method call " + repr(action[1]) )
      action_evaluation = self._eval_action(action[2], rulevars)
      if not isinstance(action_evaluation, list):
        raise ActionFailedException( "Invalid function call argument type " + repr(action_evaluation) )
      action_evaluation = meth(*(tuple(action_evaluation)))
    elif action[0] == u'+':
      a1 = self._eval_action(action[1], rulevars)
      a2 = self._eval_action(action[2], rulevars)
      if isinstance(a1,list):
        if isinstance(a2,list):
          action_evaluation = a1 + a2
        else:
          action_evaluation = a1 + [a2]
      elif isinstance(a2,list):
        action_evaluation = [a1] + a2
      elif isinstance(a1,int) and isinstance(a2,int):
        action_evaluation = a1 + a2
      else:
        action_evaluation = unicode(a1) + unicode(a2)
    elif action[0] == u'-':
      a1 = self._eval_action(action[1], rulevars)
      a2 = self._eval_action(action[2], rulevars)
      if isinstance(a1,int) and isinstance(a2,int):
        action_evaluation = a1 - a2
      else:
        raise ActionFailedException("Invalid operand types to - operator: " + ",".join([repr(a) for a in action[1:]]))
    elif action[0] == u'*':
      a1 = self._eval_action(action[1], rulevars)
      a2 = self._eval_action(action[2], rulevars)
      if isinstance(a1,int) and isinstance(a2,int):
        action_evaluation = a1 * a2
      else:
        raise ActionFailedException("Invalid operand types to * operator: " + ",".join([repr(a) for a in action[1:]]))
    elif action[0] == u'/':
      a1 = self._eval_action(action[1], rulevars)
      a2 = self._eval_action(action[2], rulevars)
      if isinstance(a1,int) and isinstance(a2,int):
        action_evaluation = a1 / a2
      else:
        raise ActionFailedException("Invalid operand types to / operator: " + ",".join([repr(a) for a in action[1:]]))
    elif action[0] == u'%':
      a1 = self._eval_action(action[1], rulevars)
      a2 = self._eval_action(action[2], rulevars)
      if isinstance(a1,int) and isinstance(a2,int):
        action_evaluation = a1 % a2
      else:
        raise ActionFailedException("Invalid operand types to % operator: " + ",".join([repr(a) for a in action[1:]]))
    elif action[0] == u'=':
      return tuple([self._eval_action(a,rulevars) for a in action])
    else:
      raise ActionFailedException( "Unknown action list type " + repr(action) )
    return action_evaluation

  tables={
'actions':{
None:0,
(0,-2):6,
(0,-1):5,
(0,1):1,
(0,2):2,
(0,3):3,
(0,10):4,
(1,-2):6,
(1,-1):5,
(1,0):0,
(1,2):7,
(1,3):3,
(1,10):4,
(2,-2):-1,
(2,-1):-1,
(2,0):-1,
(3,-2):-3,
(3,-1):-3,
(3,0):-3,
(4,-2):-4,
(4,-1):-4,
(4,0):-4,
(5,-17):9,
(5,11):8,
(6,-17):9,
(6,-7):17,
(6,-6):16,
(6,-5):18,
(6,-4):19,
(6,-1):15,
(6,4):10,
(6,5):11,
(6,6):12,
(6,7):13,
(6,11):14,
(7,-2):-2,
(7,-1):-2,
(7,0):-2,
(8,-16):20,
(8,-2):-27,
(8,-1):-27,
(8,0):-27,
(9,-29):26,
(9,-24):28,
(9,-23):27,
(9,12):21,
(9,13):22,
(9,14):23,
(9,15):24,
(9,16):25,
(10,-2):-5,
(10,-1):-5,
(10,0):-5,
(11,-11):30,
(11,-10):29,
(11,-2):-6,
(11,-1):-6,
(11,0):-6,
(12,-14):33,
(12,-13):32,
(12,-12):31,
(12,-11):-8,
(12,-10):-8,
(12,-2):-8,
(12,-1):-8,
(12,0):-8,
(13,-14):-11,
(13,-13):-11,
(13,-12):-11,
(13,-11):-11,
(13,-10):-11,
(13,-2):-11,
(13,-1):-11,
(13,0):-11,
(14,-16):34,
(14,-2):-29,
(14,-1):-29,
(14,0):-29,
(15,-14):-15,
(15,-13):-15,
(15,-12):-15,
(15,-11):-15,
(15,-10):-15,
(15,-7):35,
(15,-3):36,
(15,-2):-15,
(15,-1):-15,
(15,0):-15,
(16,-14):-16,
(16,-13):-16,
(16,-12):-16,
(16,-11):-16,
(16,-10):-16,
(16,-2):-16,
(16,-1):-16,
(16,0):-16,
(17,-8):44,
(17,-7):46,
(17,-6):45,
(17,-5):47,
(17,-4):48,
(17,-1):43,
(17,4):37,
(17,5):38,
(17,6):39,
(17,7):40,
(17,8):41,
(17,9):42,
(18,-14):-18,
(18,-13):-18,
(18,-12):-18,
(18,-11):-18,
(18,-10):-18,
(18,-2):-18,
(18,-1):-18,
(18,0):-18,
(19,-14):-17,
(19,-13):-17,
(19,-12):-17,
(19,-11):-17,
(19,-10):-17,
(19,-2):-17,
(19,-1):-17,
(19,0):-17,
(20,-7):17,
(20,-6):16,
(20,-5):18,
(20,-4):19,
(20,-1):15,
(20,4):49,
(20,5):11,
(20,6):12,
(20,7):13,
(21,-19):50,
(21,-18):51,
(22,-29):54,
(22,-24):56,
(22,-23):55,
(22,-19):-32,
(22,-18):-32,
(22,14):52,
(22,15):24,
(22,16):53,
(23,-29):-34,
(23,-24):-34,
(23,-23):-34,
(23,-19):-34,
(23,-18):-34,
(24,-29):-36,
(24,-24):-36,
(24,-23):-36,
(24,-22):57,
(24,-21):58,
(24,-20):59,
(24,-19):-36,
(24,-18):-36,
(25,-29):-41,
(25,-24):-41,
(25,-23):-41,
(25,-22):-41,
(25,-21):-41,
(25,-20):-41,
(25,-19):-41,
(25,-18):-41,
(26,-29):65,
(26,-24):67,
(26,-23):66,
(26,12):60,
(26,13):61,
(26,14):62,
(26,15):63,
(26,16):64,
(27,-29):-40,
(27,-24):-40,
(27,-23):-40,
(27,-22):-40,
(27,-21):-40,
(27,-20):-40,
(27,-19):-40,
(27,-18):-40,
(28,-25):70,
(28,17):68,
(28,18):69,
(29,-7):75,
(29,-6):74,
(29,-5):76,
(29,-4):77,
(29,-1):73,
(29,6):71,
(29,7):72,
(30,-7):75,
(30,-6):74,
(30,-5):76,
(30,-4):77,
(30,-1):73,
(30,6):78,
(30,7):72,
(31,-7):17,
(31,-6):16,
(31,-5):18,
(31,-4):19,
(31,-1):80,
(31,7):79,
(32,-7):17,
(32,-6):16,
(32,-5):18,
(32,-4):19,
(32,-1):80,
(32,7):81,
(33,-7):17,
(33,-6):16,
(33,-5):18,
(33,-4):19,
(33,-1):80,
(33,7):82,
(34,-7):17,
(34,-6):16,
(34,-5):18,
(34,-4):19,
(34,-1):15,
(34,4):83,
(34,5):11,
(34,6):12,
(34,7):13,
(35,-8):85,
(35,-7):46,
(35,-6):45,
(35,-5):47,
(35,-4):48,
(35,-1):43,
(35,4):37,
(35,5):38,
(35,6):39,
(35,7):40,
(35,8):84,
(35,9):42,
(36,-7):17,
(36,-6):16,
(36,-5):18,
(36,-4):19,
(36,-1):80,
(36,5):86,
(36,6):12,
(36,7):13,
(37,-9):-25,
(37,-8):-25,
(38,-11):88,
(38,-10):87,
(38,-9):-6,
(38,-8):-6,
(39,-14):91,
(39,-13):90,
(39,-12):89,
(39,-11):-8,
(39,-10):-8,
(39,-9):-8,
(39,-8):-8,
(40,-14):-11,
(40,-13):-11,
(40,-12):-11,
(40,-11):-11,
(40,-10):-11,
(40,-9):-11,
(40,-8):-11,
(41,-8):92,
(42,-9):93,
(42,-8):-23,
(43,-14):-15,
(43,-13):-15,
(43,-12):-15,
(43,-11):-15,
(43,-10):-15,
(43,-9):-15,
(43,-8):-15,
(43,-7):94,
(43,-3):95,
(44,-14):-19,
(44,-13):-19,
(44,-12):-19,
(44,-11):-19,
(44,-10):-19,
(44,-2):-19,
(44,-1):-19,
(44,0):-19,
(45,-14):-16,
(45,-13):-16,
(45,-12):-16,
(45,-11):-16,
(45,-10):-16,
(45,-9):-16,
(45,-8):-16,
(46,-8):97,
(46,-7):46,
(46,-6):45,
(46,-5):47,
(46,-4):48,
(46,-1):43,
(46,4):37,
(46,5):38,
(46,6):39,
(46,7):40,
(46,8):96,
(46,9):42,
(47,-14):-18,
(47,-13):-18,
(47,-12):-18,
(47,-11):-18,
(47,-10):-18,
(47,-9):-18,
(47,-8):-18,
(48,-14):-17,
(48,-13):-17,
(48,-12):-17,
(48,-11):-17,
(48,-10):-17,
(48,-9):-17,
(48,-8):-17,
(49,-2):-28,
(49,-1):-28,
(49,0):-28,
(50,-29):102,
(50,-24):104,
(50,-23):103,
(50,13):98,
(50,14):99,
(50,15):100,
(50,16):101,
(51,-16):-31,
(51,-2):-31,
(51,-1):-31,
(51,0):-31,
(52,-29):-35,
(52,-24):-35,
(52,-23):-35,
(52,-19):-35,
(52,-18):-35,
(53,-29):-41,
(53,-24):-41,
(53,-23):-41,
(53,-22):-41,
(53,-21):-41,
(53,-20):-41,
(53,-19):-41,
(53,-18):-41,
(54,-29):65,
(54,-24):67,
(54,-23):66,
(54,12):105,
(54,13):61,
(54,14):62,
(54,15):63,
(54,16):64,
(55,-29):-40,
(55,-24):-40,
(55,-23):-40,
(55,-22):-40,
(55,-21):-40,
(55,-20):-40,
(55,-19):-40,
(55,-18):-40,
(56,-25):70,
(56,17):106,
(56,18):69,
(57,-29):-37,
(57,-24):-37,
(57,-23):-37,
(57,-19):-37,
(57,-18):-37,
(58,-29):-38,
(58,-24):-38,
(58,-23):-38,
(58,-19):-38,
(58,-18):-38,
(59,-29):-39,
(59,-24):-39,
(59,-23):-39,
(59,-19):-39,
(59,-18):-39,
(60,-28):108,
(60,-19):107,
(61,-29):111,
(61,-28):-32,
(61,-24):113,
(61,-23):112,
(61,-19):-32,
(61,14):109,
(61,15):63,
(61,16):110,
(62,-29):-34,
(62,-28):-34,
(62,-24):-34,
(62,-23):-34,
(62,-19):-34,
(63,-29):-36,
(63,-28):-36,
(63,-24):-36,
(63,-23):-36,
(63,-22):114,
(63,-21):115,
(63,-20):116,
(63,-19):-36,
(64,-29):-41,
(64,-28):-41,
(64,-24):-41,
(64,-23):-41,
(64,-22):-41,
(64,-21):-41,
(64,-20):-41,
(64,-19):-41,
(65,-29):65,
(65,-24):67,
(65,-23):66,
(65,12):117,
(65,13):61,
(65,14):62,
(65,15):63,
(65,16):64,
(66,-29):-40,
(66,-28):-40,
(66,-24):-40,
(66,-23):-40,
(66,-22):-40,
(66,-21):-40,
(66,-20):-40,
(66,-19):-40,
(67,-25):70,
(67,17):118,
(67,18):69,
(68,-26):120,
(68,-25):70,
(68,18):119,
(69,-26):-44,
(69,-25):-44,
(70,-27):121,
(70,-26):-46,
(70,-25):-46,
(71,-14):124,
(71,-13):123,
(71,-12):122,
(71,-11):-9,
(71,-10):-9,
(71,-2):-9,
(71,-1):-9,
(71,0):-9,
(72,-14):-11,
(72,-13):-11,
(72,-12):-11,
(72,-11):-11,
(72,-10):-11,
(72,-2):-11,
(72,-1):-11,
(72,0):-11,
(73,-14):-15,
(73,-13):-15,
(73,-12):-15,
(73,-11):-15,
(73,-10):-15,
(73,-7):125,
(73,-2):-15,
(73,-1):-15,
(73,0):-15,
(74,-14):-16,
(74,-13):-16,
(74,-12):-16,
(74,-11):-16,
(74,-10):-16,
(74,-2):-16,
(74,-1):-16,
(74,0):-16,
(75,-8):127,
(75,-7):46,
(75,-6):45,
(75,-5):47,
(75,-4):48,
(75,-1):43,
(75,4):37,
(75,5):38,
(75,6):39,
(75,7):40,
(75,8):126,
(75,9):42,
(76,-14):-18,
(76,-13):-18,
(76,-12):-18,
(76,-11):-18,
(76,-10):-18,
(76,-2):-18,
(76,-1):-18,
(76,0):-18,
(77,-14):-17,
(77,-13):-17,
(77,-12):-17,
(77,-11):-17,
(77,-10):-17,
(77,-2):-17,
(77,-1):-17,
(77,0):-17,
(78,-14):124,
(78,-13):123,
(78,-12):122,
(78,-11):-10,
(78,-10):-10,
(78,-2):-10,
(78,-1):-10,
(78,0):-10,
(79,-14):-12,
(79,-13):-12,
(79,-12):-12,
(79,-11):-12,
(79,-10):-12,
(79,-2):-12,
(79,-1):-12,
(79,0):-12,
(80,-14):-15,
(80,-13):-15,
(80,-12):-15,
(80,-11):-15,
(80,-10):-15,
(80,-7):35,
(80,-2):-15,
(80,-1):-15,
(80,0):-15,
(81,-14):-13,
(81,-13):-13,
(81,-12):-13,
(81,-11):-13,
(81,-10):-13,
(81,-2):-13,
(81,-1):-13,
(81,0):-13,
(82,-14):-14,
(82,-13):-14,
(82,-12):-14,
(82,-11):-14,
(82,-10):-14,
(82,-2):-14,
(82,-1):-14,
(82,0):-14,
(83,-2):-30,
(83,-1):-30,
(83,0):-30,
(84,-8):128,
(85,-14):-21,
(85,-13):-21,
(85,-12):-21,
(85,-11):-21,
(85,-10):-21,
(85,-2):-21,
(85,-1):-21,
(85,0):-21,
(86,-11):30,
(86,-10):29,
(86,-2):-7,
(86,-1):-7,
(86,0):-7,
(87,-7):133,
(87,-6):132,
(87,-5):134,
(87,-4):135,
(87,-1):131,
(87,6):129,
(87,7):130,
(88,-7):133,
(88,-6):132,
(88,-5):134,
(88,-4):135,
(88,-1):131,
(88,6):136,
(88,7):130,
(89,-7):46,
(89,-6):45,
(89,-5):47,
(89,-4):48,
(89,-1):138,
(89,7):137,
(90,-7):46,
(90,-6):45,
(90,-5):47,
(90,-4):48,
(90,-1):138,
(90,7):139,
(91,-7):46,
(91,-6):45,
(91,-5):47,
(91,-4):48,
(91,-1):138,
(91,7):140,
(92,-14):-20,
(92,-13):-20,
(92,-12):-20,
(92,-11):-20,
(92,-10):-20,
(92,-2):-20,
(92,-1):-20,
(92,0):-20,
(93,-8):-24,
(93,-7):46,
(93,-6):45,
(93,-5):47,
(93,-4):48,
(93,-1):43,
(93,4):141,
(93,5):38,
(93,6):39,
(93,7):40,
(94,-8):143,
(94,-7):46,
(94,-6):45,
(94,-5):47,
(94,-4):48,
(94,-1):43,
(94,4):37,
(94,5):38,
(94,6):39,
(94,7):40,
(94,8):142,
(94,9):42,
(95,-7):46,
(95,-6):45,
(95,-5):47,
(95,-4):48,
(95,-1):138,
(95,5):144,
(95,6):39,
(95,7):40,
(96,-8):145,
(97,-14):-19,
(97,-13):-19,
(97,-12):-19,
(97,-11):-19,
(97,-10):-19,
(97,-9):-19,
(97,-8):-19,
(98,-29):148,
(98,-24):150,
(98,-23):149,
(98,-19):-33,
(98,-18):-33,
(98,14):146,
(98,15):100,
(98,16):147,
(99,-29):-34,
(99,-24):-34,
(99,-23):-34,
(99,-19):-34,
(99,-18):-34,
(100,-29):-36,
(100,-24):-36,
(100,-23):-36,
(100,-22):151,
(100,-21):152,
(100,-20):153,
(100,-19):-36,
(100,-18):-36,
(101,-29):-41,
(101,-24):-41,
(101,-23):-41,
(101,-22):-41,
(101,-21):-41,
(101,-20):-41,
(101,-19):-41,
(101,-18):-41,
(102,-29):65,
(102,-24):67,
(102,-23):66,
(102,12):154,
(102,13):61,
(102,14):62,
(102,15):63,
(102,16):64,
(103,-29):-40,
(103,-24):-40,
(103,-23):-40,
(103,-22):-40,
(103,-21):-40,
(103,-20):-40,
(103,-19):-40,
(103,-18):-40,
(104,-25):70,
(104,17):155,
(104,18):69,
(105,-28):156,
(105,-19):107,
(106,-26):157,
(106,-25):70,
(106,18):119,
(107,-29):162,
(107,-24):164,
(107,-23):163,
(107,13):158,
(107,14):159,
(107,15):160,
(107,16):161,
(108,-29):-42,
(108,-24):-42,
(108,-23):-42,
(108,-22):-42,
(108,-21):-42,
(108,-20):-42,
(108,-19):-42,
(108,-18):-42,
(109,-29):-35,
(109,-28):-35,
(109,-24):-35,
(109,-23):-35,
(109,-19):-35,
(110,-29):-41,
(110,-28):-41,
(110,-24):-41,
(110,-23):-41,
(110,-22):-41,
(110,-21):-41,
(110,-20):-41,
(110,-19):-41,
(111,-29):65,
(111,-24):67,
(111,-23):66,
(111,12):165,
(111,13):61,
(111,14):62,
(111,15):63,
(111,16):64,
(112,-29):-40,
(112,-28):-40,
(112,-24):-40,
(112,-23):-40,
(112,-22):-40,
(112,-21):-40,
(112,-20):-40,
(112,-19):-40,
(113,-25):70,
(113,17):166,
(113,18):69,
(114,-29):-37,
(114,-28):-37,
(114,-24):-37,
(114,-23):-37,
(114,-19):-37,
(115,-29):-38,
(115,-28):-38,
(115,-24):-38,
(115,-23):-38,
(115,-19):-38,
(116,-29):-39,
(116,-28):-39,
(116,-24):-39,
(116,-23):-39,
(116,-19):-39,
(117,-28):167,
(117,-19):107,
(118,-26):168,
(118,-25):70,
(118,18):119,
(119,-26):-45,
(119,-25):-45,
(120,-29):-43,
(120,-24):-43,
(120,-23):-43,
(120,-22):-43,
(120,-21):-43,
(120,-20):-43,
(120,-19):-43,
(120,-18):-43,
(121,-25):169,
(122,-7):75,
(122,-6):74,
(122,-5):76,
(122,-4):77,
(122,-1):73,
(122,7):170,
(123,-7):75,
(123,-6):74,
(123,-5):76,
(123,-4):77,
(123,-1):73,
(123,7):171,
(124,-7):75,
(124,-6):74,
(124,-5):76,
(124,-4):77,
(124,-1):73,
(124,7):172,
(125,-8):174,
(125,-7):46,
(125,-6):45,
(125,-5):47,
(125,-4):48,
(125,-1):43,
(125,4):37,
(125,5):38,
(125,6):39,
(125,7):40,
(125,8):173,
(125,9):42,
(126,-8):175,
(127,-14):-19,
(127,-13):-19,
(127,-12):-19,
(127,-11):-19,
(127,-10):-19,
(127,-2):-19,
(127,-1):-19,
(127,0):-19,
(128,-14):-22,
(128,-13):-22,
(128,-12):-22,
(128,-11):-22,
(128,-10):-22,
(128,-2):-22,
(128,-1):-22,
(128,0):-22,
(129,-14):178,
(129,-13):177,
(129,-12):176,
(129,-11):-9,
(129,-10):-9,
(129,-9):-9,
(129,-8):-9,
(130,-14):-11,
(130,-13):-11,
(130,-12):-11,
(130,-11):-11,
(130,-10):-11,
(130,-9):-11,
(130,-8):-11,
(131,-14):-15,
(131,-13):-15,
(131,-12):-15,
(131,-11):-15,
(131,-10):-15,
(131,-9):-15,
(131,-8):-15,
(131,-7):179,
(132,-14):-16,
(132,-13):-16,
(132,-12):-16,
(132,-11):-16,
(132,-10):-16,
(132,-9):-16,
(132,-8):-16,
(133,-8):181,
(133,-7):46,
(133,-6):45,
(133,-5):47,
(133,-4):48,
(133,-1):43,
(133,4):37,
(133,5):38,
(133,6):39,
(133,7):40,
(133,8):180,
(133,9):42,
(134,-14):-18,
(134,-13):-18,
(134,-12):-18,
(134,-11):-18,
(134,-10):-18,
(134,-9):-18,
(134,-8):-18,
(135,-14):-17,
(135,-13):-17,
(135,-12):-17,
(135,-11):-17,
(135,-10):-17,
(135,-9):-17,
(135,-8):-17,
(136,-14):178,
(136,-13):177,
(136,-12):176,
(136,-11):-10,
(136,-10):-10,
(136,-9):-10,
(136,-8):-10,
(137,-14):-12,
(137,-13):-12,
(137,-12):-12,
(137,-11):-12,
(137,-10):-12,
(137,-9):-12,
(137,-8):-12,
(138,-14):-15,
(138,-13):-15,
(138,-12):-15,
(138,-11):-15,
(138,-10):-15,
(138,-9):-15,
(138,-8):-15,
(138,-7):94,
(139,-14):-13,
(139,-13):-13,
(139,-12):-13,
(139,-11):-13,
(139,-10):-13,
(139,-9):-13,
(139,-8):-13,
(140,-14):-14,
(140,-13):-14,
(140,-12):-14,
(140,-11):-14,
(140,-10):-14,
(140,-9):-14,
(140,-8):-14,
(141,-9):-26,
(141,-8):-26,
(142,-8):182,
(143,-14):-21,
(143,-13):-21,
(143,-12):-21,
(143,-11):-21,
(143,-10):-21,
(143,-9):-21,
(143,-8):-21,
(144,-11):88,
(144,-10):87,
(144,-9):-7,
(144,-8):-7,
(145,-14):-20,
(145,-13):-20,
(145,-12):-20,
(145,-11):-20,
(145,-10):-20,
(145,-9):-20,
(145,-8):-20,
(146,-29):-35,
(146,-24):-35,
(146,-23):-35,
(146,-19):-35,
(146,-18):-35,
(147,-29):-41,
(147,-24):-41,
(147,-23):-41,
(147,-22):-41,
(147,-21):-41,
(147,-20):-41,
(147,-19):-41,
(147,-18):-41,
(148,-29):65,
(148,-24):67,
(148,-23):66,
(148,12):183,
(148,13):61,
(148,14):62,
(148,15):63,
(148,16):64,
(149,-29):-40,
(149,-24):-40,
(149,-23):-40,
(149,-22):-40,
(149,-21):-40,
(149,-20):-40,
(149,-19):-40,
(149,-18):-40,
(150,-25):70,
(150,17):184,
(150,18):69,
(151,-29):-37,
(151,-24):-37,
(151,-23):-37,
(151,-19):-37,
(151,-18):-37,
(152,-29):-38,
(152,-24):-38,
(152,-23):-38,
(152,-19):-38,
(152,-18):-38,
(153,-29):-39,
(153,-24):-39,
(153,-23):-39,
(153,-19):-39,
(153,-18):-39,
(154,-28):185,
(154,-19):107,
(155,-26):186,
(155,-25):70,
(155,18):119,
(156,-29):-42,
(156,-24):-42,
(156,-23):-42,
(156,-22):-42,
(156,-21):-42,
(156,-20):-42,
(156,-19):-42,
(156,-18):-42,
(157,-29):-43,
(157,-24):-43,
(157,-23):-43,
(157,-22):-43,
(157,-21):-43,
(157,-20):-43,
(157,-19):-43,
(157,-18):-43,
(158,-29):189,
(158,-28):-33,
(158,-24):191,
(158,-23):190,
(158,-19):-33,
(158,14):187,
(158,15):160,
(158,16):188,
(159,-29):-34,
(159,-28):-34,
(159,-24):-34,
(159,-23):-34,
(159,-19):-34,
(160,-29):-36,
(160,-28):-36,
(160,-24):-36,
(160,-23):-36,
(160,-22):192,
(160,-21):193,
(160,-20):194,
(160,-19):-36,
(161,-29):-41,
(161,-28):-41,
(161,-24):-41,
(161,-23):-41,
(161,-22):-41,
(161,-21):-41,
(161,-20):-41,
(161,-19):-41,
(162,-29):65,
(162,-24):67,
(162,-23):66,
(162,12):195,
(162,13):61,
(162,14):62,
(162,15):63,
(162,16):64,
(163,-29):-40,
(163,-28):-40,
(163,-24):-40,
(163,-23):-40,
(163,-22):-40,
(163,-21):-40,
(163,-20):-40,
(163,-19):-40,
(164,-25):70,
(164,17):196,
(164,18):69,
(165,-28):197,
(165,-19):107,
(166,-26):198,
(166,-25):70,
(166,18):119,
(167,-29):-42,
(167,-28):-42,
(167,-24):-42,
(167,-23):-42,
(167,-22):-42,
(167,-21):-42,
(167,-20):-42,
(167,-19):-42,
(168,-29):-43,
(168,-28):-43,
(168,-24):-43,
(168,-23):-43,
(168,-22):-43,
(168,-21):-43,
(168,-20):-43,
(168,-19):-43,
(169,-26):-47,
(169,-25):-47,
(170,-14):-12,
(170,-13):-12,
(170,-12):-12,
(170,-11):-12,
(170,-10):-12,
(170,-2):-12,
(170,-1):-12,
(170,0):-12,
(171,-14):-13,
(171,-13):-13,
(171,-12):-13,
(171,-11):-13,
(171,-10):-13,
(171,-2):-13,
(171,-1):-13,
(171,0):-13,
(172,-14):-14,
(172,-13):-14,
(172,-12):-14,
(172,-11):-14,
(172,-10):-14,
(172,-2):-14,
(172,-1):-14,
(172,0):-14,
(173,-8):199,
(174,-14):-21,
(174,-13):-21,
(174,-12):-21,
(174,-11):-21,
(174,-10):-21,
(174,-2):-21,
(174,-1):-21,
(174,0):-21,
(175,-14):-20,
(175,-13):-20,
(175,-12):-20,
(175,-11):-20,
(175,-10):-20,
(175,-2):-20,
(175,-1):-20,
(175,0):-20,
(176,-7):133,
(176,-6):132,
(176,-5):134,
(176,-4):135,
(176,-1):131,
(176,7):200,
(177,-7):133,
(177,-6):132,
(177,-5):134,
(177,-4):135,
(177,-1):131,
(177,7):201,
(178,-7):133,
(178,-6):132,
(178,-5):134,
(178,-4):135,
(178,-1):131,
(178,7):202,
(179,-8):204,
(179,-7):46,
(179,-6):45,
(179,-5):47,
(179,-4):48,
(179,-1):43,
(179,4):37,
(179,5):38,
(179,6):39,
(179,7):40,
(179,8):203,
(179,9):42,
(180,-8):205,
(181,-14):-19,
(181,-13):-19,
(181,-12):-19,
(181,-11):-19,
(181,-10):-19,
(181,-9):-19,
(181,-8):-19,
(182,-14):-22,
(182,-13):-22,
(182,-12):-22,
(182,-11):-22,
(182,-10):-22,
(182,-9):-22,
(182,-8):-22,
(183,-28):206,
(183,-19):107,
(184,-26):207,
(184,-25):70,
(184,18):119,
(185,-29):-42,
(185,-24):-42,
(185,-23):-42,
(185,-22):-42,
(185,-21):-42,
(185,-20):-42,
(185,-19):-42,
(185,-18):-42,
(186,-29):-43,
(186,-24):-43,
(186,-23):-43,
(186,-22):-43,
(186,-21):-43,
(186,-20):-43,
(186,-19):-43,
(186,-18):-43,
(187,-29):-35,
(187,-28):-35,
(187,-24):-35,
(187,-23):-35,
(187,-19):-35,
(188,-29):-41,
(188,-28):-41,
(188,-24):-41,
(188,-23):-41,
(188,-22):-41,
(188,-21):-41,
(188,-20):-41,
(188,-19):-41,
(189,-29):65,
(189,-24):67,
(189,-23):66,
(189,12):208,
(189,13):61,
(189,14):62,
(189,15):63,
(189,16):64,
(190,-29):-40,
(190,-28):-40,
(190,-24):-40,
(190,-23):-40,
(190,-22):-40,
(190,-21):-40,
(190,-20):-40,
(190,-19):-40,
(191,-25):70,
(191,17):209,
(191,18):69,
(192,-29):-37,
(192,-28):-37,
(192,-24):-37,
(192,-23):-37,
(192,-19):-37,
(193,-29):-38,
(193,-28):-38,
(193,-24):-38,
(193,-23):-38,
(193,-19):-38,
(194,-29):-39,
(194,-28):-39,
(194,-24):-39,
(194,-23):-39,
(194,-19):-39,
(195,-28):210,
(195,-19):107,
(196,-26):211,
(196,-25):70,
(196,18):119,
(197,-29):-42,
(197,-28):-42,
(197,-24):-42,
(197,-23):-42,
(197,-22):-42,
(197,-21):-42,
(197,-20):-42,
(197,-19):-42,
(198,-29):-43,
(198,-28):-43,
(198,-24):-43,
(198,-23):-43,
(198,-22):-43,
(198,-21):-43,
(198,-20):-43,
(198,-19):-43,
(199,-14):-22,
(199,-13):-22,
(199,-12):-22,
(199,-11):-22,
(199,-10):-22,
(199,-2):-22,
(199,-1):-22,
(199,0):-22,
(200,-14):-12,
(200,-13):-12,
(200,-12):-12,
(200,-11):-12,
(200,-10):-12,
(200,-9):-12,
(200,-8):-12,
(201,-14):-13,
(201,-13):-13,
(201,-12):-13,
(201,-11):-13,
(201,-10):-13,
(201,-9):-13,
(201,-8):-13,
(202,-14):-14,
(202,-13):-14,
(202,-12):-14,
(202,-11):-14,
(202,-10):-14,
(202,-9):-14,
(202,-8):-14,
(203,-8):212,
(204,-14):-21,
(204,-13):-21,
(204,-12):-21,
(204,-11):-21,
(204,-10):-21,
(204,-9):-21,
(204,-8):-21,
(205,-14):-20,
(205,-13):-20,
(205,-12):-20,
(205,-11):-20,
(205,-10):-20,
(205,-9):-20,
(205,-8):-20,
(206,-29):-42,
(206,-24):-42,
(206,-23):-42,
(206,-22):-42,
(206,-21):-42,
(206,-20):-42,
(206,-19):-42,
(206,-18):-42,
(207,-29):-43,
(207,-24):-43,
(207,-23):-43,
(207,-22):-43,
(207,-21):-43,
(207,-20):-43,
(207,-19):-43,
(207,-18):-43,
(208,-28):213,
(208,-19):107,
(209,-26):214,
(209,-25):70,
(209,18):119,
(210,-29):-42,
(210,-28):-42,
(210,-24):-42,
(210,-23):-42,
(210,-22):-42,
(210,-21):-42,
(210,-20):-42,
(210,-19):-42,
(211,-29):-43,
(211,-28):-43,
(211,-24):-43,
(211,-23):-43,
(211,-22):-43,
(211,-21):-43,
(211,-20):-43,
(211,-19):-43,
(212,-14):-22,
(212,-13):-22,
(212,-12):-22,
(212,-11):-22,
(212,-10):-22,
(212,-9):-22,
(212,-8):-22,
(213,-29):-42,
(213,-28):-42,
(213,-24):-42,
(213,-23):-42,
(213,-22):-42,
(213,-21):-42,
(213,-20):-42,
(213,-19):-42,
(214,-29):-43,
(214,-28):-43,
(214,-24):-43,
(214,-23):-43,
(214,-22):-43,
(214,-21):-43,
(214,-20):-43,
(214,-19):-43,
},
'nonterms':(
u'%start',
u'file',
u'line',
u'directive',
u'expression',
u'exp_plusminus',
u'exp_timesdivide',
u'exp_term',
u'expression_list_with_comma',
u'expression_list',
u'lexer_rule',
u'regexp',
u'regexp_alt',
u'regexp_concat',
u'regexp_multi',
u'regexp_atom',
u'regexp_charclass',
u'regexp_cc_parts',
u'regexp_cc_part',
),
'rules':[
(0,(1,),None),
(1,(2,),None),
(1,(1,2),None),
(2,(3,),None),
(2,(10,),None),
(3,(-2,4),(u'(',u'processDirective',[(u'$',1),(u'$',2)])),
(4,(5,),(u'$',1)),
(4,(-1,-3,5),(u'(',u'exprOper',[(u'$',2),(u'$',1),(u'$',3)])),
(5,(6,),(u'$',1)),
(5,(5,-10,6),(u'(',u'exprOper',[(u'$',2),(u'$',1),(u'$',3)])),
(5,(5,-11,6),(u'(',u'exprOper',[(u'$',2),(u'$',1),(u'$',3)])),
(6,(7,),(u'$',1)),
(6,(6,-12,7),(u'(',u'exprOper',[(u'$',2),(u'$',1),(u'$',3)])),
(6,(6,-13,7),(u'(',u'exprOper',[(u'$',2),(u'$',1),(u'$',3)])),
(6,(6,-14,7),(u'(',u'exprOper',[(u'$',2),(u'$',1),(u'$',3)])),
(7,(-1,),(u'(',u'exprToken',[(u'$',1)])),
(7,(-6,),(u'(',u'exprString',[(u'$',1)])),
(7,(-4,),(u'(',u'exprNumber',[(u'$',1)])),
(7,(-5,),(u'(',u'exprPosParam',[(u'$',1)])),
(7,(-7,-8),[]),
(7,(-7,8,-8),(u'$',2)),
(7,(-1,-7,-8),(u'(',u'exprFuncCall',[(u'(',u'exprToken',[(u'$',1)]),[]])),
(7,(-1,-7,8,-8),(u'(',u'exprFuncCall',[(u'(',u'exprToken',[(u'$',1)]),(u'$',3)])),
(8,(9,),(u'$',1)),
(8,(9,-9),(u'$',1)),
(9,(4,),[(u'$',1)]),
(9,(9,-9,4),(u'+',(u'$',1),[(u'$',3)])),
(10,(-1,11),(u'(',u'rxAddRuleToTable',[(u'$',1),(u'$',2)])),
(10,(-1,11,-16,4),(u'(',u'rxAddRuleToTable',[(u'$',1),(u'$',2),(u'$',4)])),
(10,(-2,11),(u'(',u'rxAddRuleToTable',[(u'$',1),(u'$',2)])),
(10,(-2,11,-16,4),(u'(',u'rxAddRuleToTable',[(u'$',1),(u'$',2),(u'$',4)])),
(11,(-17,12,-18),(u'$',2)),
(12,(13,),(u'$',1)),
(12,(12,-19,13),(u'(',u'rxMakeAlternateNFA',[(u'$',1),(u'$',3)])),
(13,(14,),(u'$',1)),
(13,(13,14),(u'(',u'rxMakeSequenceNFA',[(u'$',1),(u'$',2)])),
(14,(15,),(u'$',1)),
(14,(15,-22),(u'(',u'rxMakeStarNFA',[(u'$',1)])),
(14,(15,-21),(u'(',u'rxMakeQuestionNFA',[(u'$',1)])),
(14,(15,-20),(u'(',u'rxMakePlusNFA',[(u'$',1)])),
(15,(-23,),(u'(',u'rxMakeAtomNFA',[(u'$',1)])),
(15,(16,),(u'$',1)),
(15,(-29,12,-28),(u'$',2)),
(16,(-24,17,-26),(u'(',u'rxMakeCharClassNFA',[(u'$',1),(u'$',2)])),
(17,(18,),[(u'$',1)]),
(17,(17,18),(u'+',(u'$',1),[(u'$',2)])),
(18,(-25,),[(u'$',1),(u'$',1)]),
(18,(-25,-27,-25),[(u'$',1),(u'$',3)]),
],
'tokens':(
u'%eof',
u'C_TOKEN',
u'C_DIRECTIVE',
u'C_EQUALS',
u'C_NUMBER',
u'C_POS_PARAM',
u'C_QUOTEDSTR',
u'C_PAREN_OPEN',
u'C_PAREN_CLOSE',
u'C_COMMA',
u'C_PLUS',
u'C_MINUS',
u'C_TIMES',
u'C_DIVIDE',
u'C_MODULO',
None,
u'C_ACTION',
u'L_RX_START',
u'L_RX_END',
u'L_RX_ALTERNATE',
u'L_RX_PLUS',
u'L_RX_QUESTION',
u'L_RX_STAR',
u'L_RX_ATOM',
u'L_RX_CHARCLASS',
u'L_RX_CC_CHAR',
u'L_RX_CC_END',
u'L_RX_CC_RANGE',
u'L_RX_GRP_CLOSE',
u'L_RX_GRP_OPEN',
),
}
